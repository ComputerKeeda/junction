syntax = "proto3";

package junction.junction;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "junction/junction/params.proto";
import "junction/junction/stations.proto";
import "junction/junction/pods.proto";

option go_package = "github.com/ComputerKeeda/junction/x/junction/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/ComputerKeeda/junction/junction/params";
  
  }
  
  // Queries a list of ListStations items.
  rpc ListStations (QueryListStationsRequest) returns (QueryListStationsResponse) {
    option (google.api.http).get = "/ComputerKeeda/junction/junction/list_stations";
  
  }
  
  // Queries a list of GetStation items.
  rpc GetStation (QueryGetStationRequest) returns (QueryGetStationResponse) {
    option (google.api.http).get = "/ComputerKeeda/junction/junction/get_station/{id}";
  
  }
  
  // Queries a list of GetStationDetailsByAddress items.
  rpc GetStationDetailsByAddress (QueryGetStationDetailsByAddressRequest) returns (QueryGetStationDetailsByAddressResponse) {
    option (google.api.http).get = "/ComputerKeeda/junction/junction/get_station_details_by_address/{address}";
  
  }
  
  // Queries a list of GetPod items.
  rpc GetPod (QueryGetPodRequest) returns (QueryGetPodResponse) {
    option (google.api.http).get = "/ComputerKeeda/junction/junction/get_pod/{stationId}/{podNumber}";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryListStationsRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryListStationsResponse {
  repeated Stations                               stationsList = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination   = 2;
}

message QueryGetStationRequest {
  string id = 1;
}

message QueryGetStationResponse {
  Stations stations = 1;
}

message QueryGetStationDetailsByAddressRequest {
  string address = 1;
}

message QueryGetStationDetailsByAddressResponse {
  Stations station = 1;
}

message QueryGetPodRequest {
  string stationId = 1;
  uint64 podNumber = 2;
}

message QueryGetPodResponse {
  Pods pod = 1;
}

